<%@ page contentType="text/html; charset=UTF-8"%>
<!--  
jsp는 사실 자바의 클래스이다.. jsp는 실행전에 class로 변환된다.
따라서 javaSE 학습이 되어 있다면, 별도의 jsp문법을 배울필요없다
왜?? jsp 가 class이기 때문에 모든 자바의 문법 그대로 쓰면 된다..
for, if, 메서드!!	
jsp를 어디에 작성할 수 있는지 여부 공부...
[ jsp 작성할 수 있는 영역 ]
1) 지시영역 [% @ %] 현재 페이지에대한 종류, 인코딩 등의 설정..
     다른 클래스를 import ... (지시영역은 jsp의 유일한 필수영역임)
2) 선언부 :  멤버변수와 멤버메서드를 기재할 수 있는 영역 (선택)      
3) 스크립틀릿 : 로직을 작성할 수 있는 영역 
              jsp가 자바의 클래스로 변경될때, 그 클래스를 가리켜 
                 서버에서 실행되는 자바의 클래스라 하여 Servlet 이라하는데
                이 서블릿이 보유한 메서드중에 service() 메서드가 있음 
                스크립틀릿은 결국 service() 메서드의 영역이엇음..
4) 표현식 : out.print 를 사용하지 않고 단축된 표현으로 
               클라이언트의 브라우저에 출력하고 싶을때
jsp는 내장객체라 불리는 이미 메모리에 올라와져있는 10여개 정도의 
내장된 객체를 지원하는데, 알아보자~~         
[내장객체]
1.request 객체 
    - 클라이언트의 요청 정보를 갖고 있는 객체 
-->
<%
	//request란 단어는 우리 즉 개발자가 한번도 선언한 적도 없는데 
	//어떻게 사용할까?? 에러도 안나면서...신기...
	//개발자가 생성한것이 아니라, 이미 컨테이너인 톰켓서버가 생성해놓음...
	//이렇게 시스템에서 그 명칭 및 생성을 주도하고 있는 객체를 가리켜 
	//내장 객체!!(built-in obect)
	
	//넘겨받은 파라미터 값들에 대한 한글깨지지 않도록 처리
	request.setCharacterEncoding("utf-8");

	String id=request.getParameter("id");
	String pw=request.getParameter("pw");
	
	//out 객체는 내장 객체중 클라이언트의 브라우저에 출력을 담당하는
	//스트림 객체 
	out.print("당신이 넘긴 아이디는 "+id);
	out.print("당신이 넘긴 비밀번호 "+id);
	
	//3.response 내장객체
	//response 서버가 클라이언트에게 응답을 할때 그 응답정보를 가진 객체 
	//출력정보를 위한 스트림을 생성하거나, 클라이언트로 하여금 지정한 url로
	//재접속을 강제 하는 등의 각종 응답과 관련된 역할을하는 객체..
	
	//클라이언트 브라우저로 하여금 지정한 url로 재접속하라!!
	//response.sendRedirect("/result.jsp");
	//error, page...
%>
<img src="/images/sea.jpg"/>













